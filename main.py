from telegram import *
from telegram.ext import *
import os
import json
import random

TOKEN = "8018994940:AAHOX82aalcenjG_wFoAP29O3EnEdDrCQc0"

photos_dir = "photos"
database_file = "database.json"
os.makedirs(photos_dir, exist_ok=True)


def load_db():
    if not os.path.exists(database_file):
        return []
    with open(database_file, "r", encoding="utf-8") as f:
        return json.load(f)

def save_db(data):
    with open(database_file, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4, ensure_ascii=False)

async def send_random_meme(update: Update, context: ContextTypes.DEFAULT_TYPE):
    memes = load_db()

    if not memes:
        await update.message.reply_text("–ü–†–û–°–¢–ò–¢–ò –ü–û–ö–ê –ù–≠–¢ –ú–≠–ú–ò–í")
        return

    meme = random.choice(memes)

    if not os.path.exists(meme["file_path"]):
        await update.reply_text("–û—à–∏–±–∫–∞ –º–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏–∑–≤–∏–Ω–∏—Ç–∏")
        return

    await update.message.reply_photo(photo=open(meme["file_path"], "rb"), \
                                     caption=f"–û–ø–∏—Å–∞–Ω–∏–µ:{meme['descrition']}")



async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await  update.message.reply_text("–ü–†–ò–í–ï–ï–ï–ï–¢ –Ø –¢–í–û–ô –ë–û–¢ –ë–£–î–£ –î–ï–õ–ê–¢–¨ –ú–ï–ú–ò")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await  update.message.reply_text("1.	–ï—Å—Ç—å –∫–∞–∫–∞—è —Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã–º —Å –º–µ–º–∞–º–∏, –∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è.\n\
2.	–°–æ–≤–º–µ—Å—Ç–∏—Ç—å –Ω–∞–¥–ø–∏—Å—å —Å —Ñ–æ—Ç–æ.\n\
3.	–ü—Ä–∏–∫—Ä—É—Ç–∏—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–∞\n\
4.	–ú–µ–º-–±–∞—Ç—Ç–ª\n")

async def custom_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await  update.message.reply_text("–≠–¢–û –ö–ê–°–¢–û–ú–ù–ê–Ø –ö–û–ú–ê–ù–î–ê")

async def show_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    buttons = [["üòÇ–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–º", "üòú–ê–Ω–µ–∫–¥–æ—Ç", "Meme-BATTLE"],
               ["üö®–ü–æ–º–æ—â—å", "üîß–ù–∞—Å—Ç—Ä–æ–π–∫–∏"],
               ["üëô–ó–∞–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"]
               ]
    reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–µ—Ç–µ –ø—Ä–∏–∫–æ–ª", reply_markup=reply_markup)

async def handle_reply_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "üòÇ–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–º":
        await send_random_meme(update=update, context=ContextTypes.DEFAULT_TYPE)
    elif text == "üëô–ó–∞–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É":
        await update.message.reply_text("–ò–î–ò –ù–ê–§–ò–ì!!!!!1", reply_markup=ReplyKeyboardRemove())






if __name__ == "__main__":
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("custom", custom_command))
    app.add_handler(CommandHandler("menu", show_buttons))
    app.add_handler(CommandHandler("meme",  send_random_meme))
    app.add_handler(MessageHandler(filters.TEXT, handle_reply_button))


    app.run_polling(poll_interval=3)



